// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type CalendarEvent struct {
	ID          int32              `json:"id"`
	UserID      pgtype.Int4        `json:"user_id"`
	Title       string             `json:"title"`
	Description pgtype.Text        `json:"description"`
	StartTime   pgtype.Timestamptz `json:"start_time"`
	EndTime     pgtype.Timestamptz `json:"end_time"`
	AllDay      pgtype.Bool        `json:"all_day"`
	Location    pgtype.Text        `json:"location"`
	ProjectID   pgtype.Int4        `json:"project_id"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type Habit struct {
	ID          int32              `json:"id"`
	UserID      pgtype.Int4        `json:"user_id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Frequency   string             `json:"frequency"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type HabitCompletion struct {
	ID            int32              `json:"id"`
	HabitID       pgtype.Int4        `json:"habit_id"`
	CompletedDate pgtype.Date        `json:"completed_date"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
}

type KanbanBoard struct {
	ID        int32              `json:"id"`
	ProjectID pgtype.Int4        `json:"project_id"`
	Name      string             `json:"name"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type KanbanCard struct {
	ID          int32              `json:"id"`
	ColumnID    pgtype.Int4        `json:"column_id"`
	Title       string             `json:"title"`
	Description pgtype.Text        `json:"description"`
	Position    int32              `json:"position"`
	TaskID      pgtype.Int4        `json:"task_id"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type KanbanColumn struct {
	ID        int32              `json:"id"`
	BoardID   pgtype.Int4        `json:"board_id"`
	Name      string             `json:"name"`
	Position  int32              `json:"position"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type Note struct {
	ID        int32              `json:"id"`
	UserID    pgtype.Int4        `json:"user_id"`
	Title     string             `json:"title"`
	Content   pgtype.Text        `json:"content"`
	ProjectID pgtype.Int4        `json:"project_id"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type PomodoroConfig struct {
	UserID             int32     `json:"user_id"`
	WorkDuration       int32     `json:"work_duration"`
	BreakDuration      int32     `json:"break_duration"`
	LongBreakDuration  int32     `json:"long_break_duration"`
	LongBreakInterval  int32     `json:"long_break_interval"`
	AutoStartBreaks    bool      `json:"auto_start_breaks"`
	AutoStartPomodoros bool      `json:"auto_start_pomodoros"`
	CreatedAt          time.Time `json:"created_at"`
	UpdatedAt          time.Time `json:"updated_at"`
}

type PomodoroPause struct {
	ID         int32              `json:"id"`
	SessionID  pgtype.Int4        `json:"session_id"`
	PauseTime  pgtype.Timestamptz `json:"pause_time"`
	ResumeTime pgtype.Timestamptz `json:"resume_time"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type PomodoroSession struct {
	ID                 int32              `json:"id"`
	UserID             pgtype.Int4        `json:"user_id"`
	TaskID             pgtype.Int4        `json:"task_id"`
	StartTime          pgtype.Timestamptz `json:"start_time"`
	EndTime            pgtype.Timestamptz `json:"end_time"`
	Duration           int32              `json:"duration"`
	Completed          pgtype.Bool        `json:"completed"`
	CreatedAt          pgtype.Timestamptz `json:"created_at"`
	Status             string             `json:"status"`
	WorkDuration       int32              `json:"work_duration"`
	BreakDuration      int32              `json:"break_duration"`
	PauseTime          pgtype.Timestamptz `json:"pause_time"`
	TotalPauseDuration pgtype.Int4        `json:"total_pause_duration"`
	ActualWorkDuration pgtype.Int4        `json:"actual_work_duration"`
	Note               pgtype.Text        `json:"note"`
}

type Project struct {
	ID          int32              `json:"id"`
	UserID      pgtype.Int4        `json:"user_id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Deadline    pgtype.Timestamptz `json:"deadline"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type ProjectMilestone struct {
	ID          int32              `json:"id"`
	ProjectID   pgtype.Int4        `json:"project_id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	DueDate     pgtype.Timestamptz `json:"due_date"`
	Completed   pgtype.Bool        `json:"completed"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type Task struct {
	ID          int32              `json:"id"`
	UserID      pgtype.Int4        `json:"user_id"`
	Description string             `json:"description"`
	Status      string             `json:"status"`
	Priority    pgtype.Text        `json:"priority"`
	DueDate     pgtype.Timestamptz `json:"due_date"`
	StartDate   pgtype.Timestamptz `json:"start_date"`
	CompletedAt pgtype.Timestamptz `json:"completed_at"`
	ProjectID   pgtype.Int4        `json:"project_id"`
	Recurrence  pgtype.Text        `json:"recurrence"`
	Tags        []string           `json:"tags"`
	Notes       pgtype.Text        `json:"notes"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type TaskCalendar struct {
	ID        int32              `json:"id"`
	TaskID    pgtype.Int4        `json:"task_id"`
	EventID   pgtype.Int4        `json:"event_id"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type TaskDependency struct {
	ID          int32              `json:"id"`
	TaskID      pgtype.Int4        `json:"task_id"`
	DependsOnID pgtype.Int4        `json:"depends_on_id"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

type TaskNote struct {
	ID        int32              `json:"id"`
	TaskID    pgtype.Int4        `json:"task_id"`
	NoteID    pgtype.Int4        `json:"note_id"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID              int32              `json:"id"`
	Email           string             `json:"email"`
	PasswordHash    string             `json:"password_hash"`
	Name            pgtype.Text        `json:"name"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `json:"updated_at"`
	ActiveProjectID pgtype.Int4        `json:"active_project_id"`
}
